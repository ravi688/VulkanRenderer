
#sl version 2022
#sb version 2022

Shader
{
	[NoParse]
	Properties
	{
		vertex fragment [MATERIAL_SET, MATERIAL_PROPERTIES_BINDING] uniform Parameters
		{
			vec4 color;
		} parameters;

		fragment [MATERIAL_SET, TEXTURE_BINDING0] uniform sampler2D albedo;
	}

	[NoParse]
	Layout
	{
		per_vertex [POSITION_BINDING, POSITION_LOCATION] vec3 position;
		per_vertex [NORMAL_BINDING, NORMAL_LOCATION] vec2 texcoord;
	}

	RenderPass
	{
		SubPass
		{
			[NoParse]
			GraphicsPipeline
			{
				colorBlend
				{
					attachment { }
				}
			}

			[NoParse]
			GLSL
			{
				#stage fragment

				#version 450
				
				#include <v3d.h>
				
				MATERIAL_PROPERTIES
				{
					vec4 color;
				} parameters;
				
				layout(set = MATERIAL_SET, binding = TEXTURE_BINDING0) uniform sampler2D albedo;
				
				layout(location = 0) in vec2 texcoord;
				
				layout(location = 0) out vec4 color;
				
				void main()
				{
					vec2 uv = vec2(texcoord.x, 1 - texcoord.y);
					color = parameters.color * texture(albedo, uv).rgba;
				}

				#stage vertex

				#version 450
				
				#include <v3d.h>
				
				CAMERA cameraInfo;
				OBJECT objectInfo;
				
				POSITION position;
				TEXCOORD texcoord;
				
				layout(location = 0) out vec2 _texcoord;
				
				void main()
				{
					vec4 clipPos = cameraInfo.screen * objectInfo.transform * vec4(position, 1);
					clipPos.y = -clipPos.y;
					gl_Position = clipPos;
					_texcoord = texcoord;
				}

			}
		}
	}
}
