Github-Repo-Sync:
    tags:
        - Github-Repo-Sync
    stage: .pre
    script:
        - echo "Hello World"
        - git fetch origin
        - git remote add github git@github.com:ravi688/VulkanRenderer.git
        - git fetch github
        - git checkout -b github/VulkanRenderer/main
        - git branch -u github main
        - git rebase origin/main
        - git push github HEAD:main


# Runs on My Dev Machine only, no correspondoing linux dual boot
Windows-AMD-Nvidia-GPU:
    tags: 
        - Windows-AMD-Nvidia-GPU
    stage: build
    script:
        - echo "Hello, $GITLAB_USER_LOGIN!"
        - $env:CHERE_INVOKING = 'yes'
        - $env:MSYSTEM = 'MINGW64' # https://www.msys2.org/docs/environments/
        - C:\msys64\usr\bin\bash -lc ' '
        - C:\msys64\usr\bin\bash -lc 'pacman --noconfirm -Syuu'
        - C:\msys64\usr\bin\bash -lc 'pacman --noconfirm -Syuu'
        - C:\msys64\usr\bin\bash -lc 'pacman --noconfirm -S git mingw-w64-x86_64-gcc make mingw-w64-x86_64-shaderc mingw-w64-x86_64-libpng'
        - C:\msys64\usr\bin\bash -lc './ci-build.sh'

# Runs on AMD GPU machine with Linux Mint operating system (dual-booted with Windows 11)
Linux-AMD-GPU:
    tags:
        - Linux-AMD-GPU
    stage: build
    script:
        - echo "Hello World"
        - sudo apt-get update
        - sudo apt-get install build-essential
        - sudo apt-get install -y libz-dev
        - sudo apt-get install -y libpng-dev
        - sudo apt-get install -y libbrotli-dev
        - sudo chmod +x ./ci-build.sh
        - ./ci-build.sh
        # reboot to windows
        - sudo chmod +x ./switch-to-windows.sh
        - ./switch-to-windows.sh

# Runs on Intel GPU machine with Linux Mint operating system (dual-booted with Windows 11)
Linux-Intel-GPU:
    tags:
        - Linux-Intel-GPU
    stage: build
    script:
        - echo "Hello World"
        - sudo apt-get update
        - sudo apt-get install build-essential
        - sudo apt-get install -y libz-dev
        - sudo apt-get install -y libpng-dev
        - sudo apt-get install -y libbrotli-dev
        - sudo chmod +x ./ci-build.sh
        - ./ci-build.sh
        # reboot to windows
        - sudo chmod +x ./switch-to-windows.sh
        - ./switch-to-windows.sh

# Runs on AMD GPU machine with Windows 11 operating system (dual-booted with Linux Mint)
Windows-AMD-GPU:
    tags:
        - Windows-AMD-GPU
    stage: build
    script:
        - $env:CHERE_INVOKING = 'yes'
        - $env:MSYSTEM = 'MINGW64' # https://www.msys2.org/docs/environments/
        - C:\msys64\usr\bin\bash -lc ' '
        - C:\msys64\usr\bin\bash -lc 'pacman --noconfirm -Syuu'
        - C:\msys64\usr\bin\bash -lc 'pacman --noconfirm -Syuu'
        - C:\msys64\usr\bin\bash -lc 'pacman --noconfirm -S git mingw-w64-x86_64-gcc make mingw-w64-x86_64-shaderc mingw-w64-x86_64-libpng'
        - C:\msys64\usr\bin\bash -lc './ci-build.sh'
        # reboot to linux
        - shutdown /r

# Runs on Intel GPU machine with Windows 11 operating system (dual-booted with Linux Mint)
Windows-Intel-GPU:
    tags:
        - Windows-Intel-GPU
    stage: build
    script:
        - $env:CHERE_INVOKING = 'yes'
        - $env:MSYSTEM = 'MINGW64' # https://www.msys2.org/docs/environments/
        - C:\msys64\usr\bin\bash -lc ' '
        - C:\msys64\usr\bin\bash -lc 'pacman --noconfirm -Syuu'
        - C:\msys64\usr\bin\bash -lc 'pacman --noconfirm -Syuu'
        - C:\msys64\usr\bin\bash -lc 'pacman --noconfirm -S git mingw-w64-x86_64-gcc make mingw-w64-x86_64-shaderc mingw-w64-x86_64-libpng'
        - C:\msys64\usr\bin\bash -lc './ci-build.sh'
        # reboot to linux
        - shutdown /r